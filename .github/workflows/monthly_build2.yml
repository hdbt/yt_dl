name: Monthly Build and Release

on:
  schedule:
    # Runs on the first day of each month at midnight UTC
    - cron: '00 11 2 * *'

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up environment (optional for Python/Node.js/other projects)
      - name: Set up Python environment (if applicable)
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          architecture: 'x64'
      - name: Unzip ffmpeg
        run: 7z x ffmpeg.7z -y
      # 3) Install dependencies (test + build)
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt

      # 4) Run tests
      - name: Run tests
        run: |
          # Example: if you have pytest or unittest
          pytest --maxfail=1 --disable-warnings || exit 1

      # 5) Build EXE with PyInstaller
      - name: Build EXE
        run: |
          # e.g. "youtube_to_mp3.py" is your main script
          pyinstaller --onefile  --hide-console=hide-early --add-binary "ffmpeg.exe;."   --add-data "loading.gif;." --add-data "overlay.gif;." --icon=favicon.ico  youtube_to_mp3.py

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: youtube_to_mp3_exe
          path: dist/youtube_to_mp3.exe
      # Step 5: Create a new GitHub release
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ github.run_number }}
          release_name: Monthly Build Release - ${{ github.run_number }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 6: Upload the `.exe` file to the release
      - name: Upload to release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: dist/youtube_to_mp3.exe  # Path to the built .exe file
          asset_name: youtube_to_mp3.exe  # Name of the .exe file
          asset_content_type: application/octet-stream
